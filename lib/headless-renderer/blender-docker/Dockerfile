FROM ubuntu:20.04 AS build-from-source

ARG OPTIX_HOST_SOURCES="./NVIDIA-OptiX-SDK-7.4.0-linux64-x86_64"
ARG DEPENDENCIES_SOURCES="/opt/dependencies/src"
ARG DEPENDENCIES_INSTALL="/opt/dependencies/install"
ARG OPTIX_SOURCE_DIR="/opt/optix-sdk"
ARG BLENDER_SOURCE_DIR="/opt/blender-src"
ARG BLENDER_INSTALL_DIR="/opt/blender"

ADD ${OPTIX_HOST_SOURCES} ${OPTIX_SOURCE_DIR}

RUN apt update && DEBIAN_FRONTEND=noninteractive apt install -y sudo cmake git
RUN DEBIAN_FRONTEND=noninteractive apt install -y nvidia-driver-510 nvidia-cuda-toolkit

WORKDIR /opt/
RUN git clone https://git.blender.org/blender.git blender-src

WORKDIR ${BLENDER_SOURCE_DIR}
RUN git checkout blender-v3.1-release
RUN git submodule init && git submodule update
RUN DEBIAN_FRONTEND=noninteractive ./build_files/build_environment/install_deps.sh --with-all --skip-opencollada --source ${DEPENDENCIES_SOURCES} --install ${DEPENDENCIES_INSTALL}
RUN ${DEPENDENCIES_INSTALL}/python-3.10/bin/pip install Cython

WORKDIR ${BLENDER_SOURCE_DIR}/build_files
RUN cmake .. \
  -D CMAKE_INSTALL_PREFIX=${BLENDER_INSTALL_DIR} \
  -D WITH_CODEC_SNDFILE=ON \
  -D PYTHON_VERSION=3.10 \
  -D PYTHON_ROOT_DIR=${DEPENDENCIES_INSTALL}/python-3.10 \
  -D BOOST_ROOT=${DEPENDENCIES_INSTALL}/boost \
  -D Boost_NO_SYSTEM_PATHS=ON \
  -D Boost_NO_BOOST_CMAKE=ON \
  -D WITH_OPENCOLORIO=ON \
  -D OPENCOLORIO_ROOT_DIR=${DEPENDENCIES_INSTALL}/ocio \
  -D OPENEXR_ROOT_DIR=${DEPENDENCIES_INSTALL}/openexr \
  -D WITH_OPENIMAGEIO=ON \
  -D OPENIMAGEIO_ROOT_DIR=${DEPENDENCIES_INSTALL}/oiio \
  -D WITH_CYCLES_OSL=ON \
  -D WITH_LLVM=ON \
  -D LLVM_VERSION=12.0.0 \
  -D OSL_ROOT_DIR=${DEPENDENCIES_INSTALL}/osl \
  -D LLVM_ROOT_DIR=${DEPENDENCIES_INSTALL}/llvm \
  -D LLVM_STATIC=ON \
  -D WITH_OPENSUBDIV=ON \
  -D OPENSUBDIV_ROOT_DIR=${DEPENDENCIES_INSTALL}/osd \
  -D WITH_OPENVDB=ON \
  -D WITH_OPENVDB_BLOSC=ON \
  -D OPENVDB_ROOT_DIR=${DEPENDENCIES_INSTALL}/openvdb \
  -D BLOSC_ROOT_DIR=${DEPENDENCIES_INSTALL}/blosc \
  -D WITH_NANOVDB=ON \
  -D NANOVDB_ROOT_DIR=${DEPENDENCIES_INSTALL}/nanovdb \
  -D WITH_CYCLES_EMBREE=ON \
  -D EMBREE_ROOT_DIR=${DEPENDENCIES_INSTALL}/embree \
  -D WITH_OPENIMAGEDENOISE=ON \
  -D OPENIMAGEDENOISE_ROOT_DIR=${DEPENDENCIES_INSTALL}/oidn \
  -D WITH_JACK=ON \
  -D WITH_JACK_DYNLOAD=ON \
  -D WITH_PULSEAUDIO=ON \
  -D WITH_PULSEAUDIO_DYNLOAD=ON \
  -D WITH_ALEMBIC=ON \
  -D ALEMBIC_ROOT_DIR=${DEPENDENCIES_INSTALL}/alembic \
  -D WITH_USD=ON \
  -D USD_ROOT_DIR=${DEPENDENCIES_INSTALL}/usd \
  -D WITH_CODEC_FFMPEG=ON \
  -D WITH_XR_OPENXR=ON \
  -D XR_OPENXR_SDK_ROOT_DIR=${DEPENDENCIES_INSTALL}/xr-openxr-sdk \
  -D WITH_CYCLES_CUDA_BINARIES=On \
  -D WITH_CYCLES=On \
  -D WITH_CYCLES_DEVICE_OPTIX=On \
  -D OPTIX_INCLUDE_DIR="${OPTIX_SOURCE_DIR}/include"
RUN make -j 18
RUN make install

RUN ${BLENDER_INSTALL_DIR}/3.1/python/bin/python3.10 -m ensurepip
RUN ${BLENDER_INSTALL_DIR}/3.1/python/bin/pip3 install Cython colormath

ENV BLENDER_PATH="${BLENDER_INSTALL_DIR}/"

CMD [ "/usr/bin/bash"]
